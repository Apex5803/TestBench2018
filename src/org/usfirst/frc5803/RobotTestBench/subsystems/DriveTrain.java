// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc5803.RobotTestBench.subsystems;
import org.usfirst.frc5803.RobotTestBench.Robot;
import org.usfirst.frc5803.RobotTestBench.models.*;
import org.usfirst.frc5803.RobotTestBench.RobotMap;
import org.usfirst.frc5803.RobotTestBench.commands.*;
import edu.wpi.first.wpilibj.GenericHID.Hand;
import edu.wpi.first.wpilibj.command.Subsystem;
import com.ctre.phoenix.motorcontrol.can.WPI_TalonSRX;


/**
 *
 */
public class DriveTrain extends Subsystem {

   WPI_TalonSRX L1 = RobotMap.driveTrainDriveTrainL1;
   WPI_TalonSRX R1 = RobotMap.driveTrainDriveTrainR1;
    @Override
    
    public void initDefaultCommand() {
    	setDefaultCommand(new Drive());


        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }


    public void drive(double left, double right){

    	this.L1.set(left);

    	this.R1.set(right);

    }

    

    public void drive(DriveSignal driveSignal) {

    	//System.out.println(driveSignal.toString());

    	this.drive(driveSignal.getLeft(), driveSignal.getRight());

    }


    public boolean quickTurnController() {

    if (Robot.oi.xbox.getY(Hand.kLeft) < 0.2 && Robot.oi.xbox.getY(Hand.kLeft) > -0.2) {
		return true;	

	} else {

		return false;

		}

    }
	

	@Override
    public void periodic() {
        // Put code here to be run every loop

    }
	
	public void End() {
		Robot.driveTrain.drive(0,0);
	}

    // Put methods for controlling this subsystem
    // here. Call these from Commands.

}

